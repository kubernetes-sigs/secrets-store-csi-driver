# This policy checks if the secretObject.labels field has the correct format.
# The label key and value should be valid DNS subdomain names.
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  name: "secret-sync-validate-label-policy"
spec:
  failurePolicy: Fail
  matchConstraints:
    resourceRules:
    - apiGroups:   ["secrets-store.sync.x-k8s.io"]
      apiVersions: ["*"]
      operations:  ["CREATE", "UPDATE"]
      resources:   ["secretsyncs"]
  variables:
  - name: secretHasLabel
    expression: "has(object.spec.secretObject.labels) ? true : false"
  - name: secretHasCorrectLabelsFormat
    expression: "variables.secretHasLabel && object.spec.secretObject.labels.all(x, size(x) < 253 && x.matches('^([A-Za-z0-9][-A-Za-z0-9_.]*[A-Za-z0-9])?(/[A-Za-z0-9]([-A-Za-z0-9_.]*[A-Za-z0-9])*)?$') == true)"
  - name: secretHasCorrectLabelsValueFormat
    expression: "variables.secretHasLabel && object.spec.secretObject.labels.all(x, size(object.spec.secretObject.labels[x]) < 63 && object.spec.secretObject.labels[x].matches('^(([A-Za-z0-9][-A-Za-z0-9_.]*)?[A-Za-z0-9])?$') == true)"
  validations:
  - expression: "variables.secretHasLabel == false || (variables.secretHasCorrectLabelsFormat && variables.secretHasCorrectLabelsValueFormat) == true"
    message: "One of the labels applied on the secret has an invalid format. Update the label and try again."
    messageExpression: "string(request.userInfo.username)  + ' has failed to ' +  string(request.operation) + ' secret with ' + string(object.type) + ' type ' + 'in the ' + string(request.namespace) + ' namespace because it does not have the correct label. Delete the secret and force the controller to recreate it with the correct label.'"
    reason: "Invalid"
