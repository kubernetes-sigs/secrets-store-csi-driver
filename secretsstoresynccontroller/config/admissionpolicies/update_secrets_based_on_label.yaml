# This policy allows the SecretSyncController to update only those secrets which have the 
# 'secrets-store.sync.x-k8s.io/secretsync' label.
# TODO: Use parameters to allow the user to specify the name of the SecretSyncController.
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  name: "secretsynccontroller-update-only-labeled-secrets-policy"
spec:
  failurePolicy: Fail
  matchConstraints:
    resourceRules:
    - apiGroups:   [""]
      apiVersions: ["v1"]
      operations:  ["UPDATE"]
      resources:   ["secrets"]
  variables:
  - name: retrievedName
    expression: "request.userInfo.username.split(':')[2]"
  - name: objectLabel
    expression: "('secrets-store.sync.x-k8s.io/secretsync' in oldObject.metadata.labels && oldObject.metadata.labels['secrets-store.sync.x-k8s.io/secretsync'] == variables.retrievedName)"
  - name: userIsSecretSyncController
    expression: "request.userInfo.username.contains('secret-store-sync-controller')"
  validations:
  - expression: "!(variables.userIsSecretSyncController == true && variables.objectLabel == false)"
    message: "'The SecretSyncController doesn't have access to update a secret which doesn't have the 'secrets-store.sync.x-k8s.io/secretsync' label.'"
    messageExpression: "'Checking expression: name=' + string(request.name) + ' operation=' + string(request.operation) + ' userInfo.username=' + string(request.userInfo.username) + ' object.type=' + string(object.type) + ' objectLabel=' + string(variables.objectLabel) + ' isController=' + string(variables.userIsSecretSyncController)"
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  name: "secretsynccontroller-update-only-labeled-secrets-binding"
spec:
  policyName: "secretsynccontroller-update-only-labeled-secrets-policy"
  validationActions: [Deny]
