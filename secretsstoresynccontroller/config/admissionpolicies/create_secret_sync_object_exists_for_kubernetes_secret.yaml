# This policy is used to prevent the creation of a Kubernetes secret if a SecretSync object doesn't exist for it.
# TODO: Use parameters to allow the user to specify the name of the SecretSyncController.
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicy
metadata:
  name: "secretsynccontroller-create-ownership-policy"
spec:
  failurePolicy: Fail
  matchConstraints:
    resourceRules:
    - apiGroups:   [""]
      apiVersions: ["v1"]
      operations:  ["CREATE"]
      resources:   ["secrets"]
  variables:
  - name: hasOneSecretSyncOwner
    expression: "(size(object.metadata.ownerReferences) == 1 && object.metadata.ownerReferences.all(o, o.kind == 'SecretSync' && o.name == object.metadata.name))"
  - name: userIsSecretSyncController
    expression: "request.userInfo.username.contains('secret-sync-controller')"
  validations:
  - expression: "!(variables.userIsSecretSyncController == true && variables.hasOneSecretSyncOwner == false)"
    message: "'The SecretSyncController doesn't have access to create a secret without a secret sync owner'"
    messageExpression: "'Checking expression: name=' + string(request.name) + ' operation=' + string(request.operation) + ' userInfo.username=' + string(request.userInfo.username) + ' isController=' + string(variables.userIsSecretSyncController)"
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: ValidatingAdmissionPolicyBinding
metadata:
  name: "secretsynccontroller-create-ownership-binding"
spec:
  policyName: "secretsynccontroller-create-ownership-policy"
  validationActions: [Deny]