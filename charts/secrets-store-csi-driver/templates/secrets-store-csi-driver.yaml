{{- if .Values.linux.enabled}}
kind: DaemonSet
apiVersion: apps/v1
metadata:
  name: {{ template "sscd.fullname" . }}
  namespace: {{ .Release.Namespace }}
{{ include "sscd.labels" . | indent 2 }}
{{- if .Values.linux.daemonsetAnnotations }}
  annotations:
{{ toYaml .Values.linux.daemonsetAnnotations | indent 4 }}
{{- end }}
spec:
  selector:
    matchLabels:
      app: {{ template "sscd.name" . }}
  updateStrategy:
{{ toYaml .Values.linux.updateStrategy | indent 4 }}
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: secrets-store
{{- if .Values.linux.podAnnotations }}
{{ toYaml .Values.linux.podAnnotations | indent 8 }}
{{- end }}
{{ include "sscd.labels" . | indent 6 }}
{{- if .Values.linux.podLabels }}
{{- toYaml .Values.linux.podLabels | nindent 8 }}
{{- end }}
    spec:
      serviceAccountName: secrets-store-csi-driver
      {{- if .Values.imagePullSecrets }}
      imagePullSecrets:
        {{ toYaml .Values.imagePullSecrets | indent 8 }}
      {{- end }}
      affinity:
{{ toYaml .Values.linux.affinity | indent 8 }}
      containers:
        - name: node-driver-registrar
          image: "{{ .Values.linux.registrarImage.repository }}:{{ .Values.linux.registrarImage.tag }}"
          args:
            - --v={{ .Values.linux.registrar.logVerbosity }}
            - --csi-address=/csi/csi.sock
            - --kubelet-registration-path={{ .Values.linux.kubeletRootDir }}/plugins/csi-secrets-store/csi.sock
          livenessProbe:
            exec:
              command:
              - /csi-node-driver-registrar
              - --kubelet-registration-path={{ .Values.linux.kubeletRootDir }}/plugins/csi-secrets-store/csi.sock
              - --mode=kubelet-registration-probe
            initialDelaySeconds: 30
            timeoutSeconds: 15
          env:
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          imagePullPolicy: {{ .Values.linux.registrarImage.pullPolicy }}
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: registration-dir
              mountPath: /registration
{{- with .Values.linux.registrar.resources }}
          resources:
{{ toYaml . | indent 12 }}
{{- end }}
        - name: secrets-store
          image: "{{ .Values.linux.image.repository }}:{{ .Values.linux.image.tag }}"
          args:
            {{- if .Values.logVerbosity }}
            - -v={{ .Values.logVerbosity }}
            {{- end }}
            {{- if .Values.logFormatJSON }}
            - --log-format-json={{ .Values.logFormatJSON }}
            {{- end }}
            - "--endpoint=$(CSI_ENDPOINT)"
            - "--nodeid=$(KUBE_NODE_NAME)"
            - "--provider-volume=/etc/kubernetes/secrets-store-csi-providers"
            {{- if and (semverCompare ">= v0.0.8-0" .Values.linux.image.tag) .Values.minimumProviderVersions }}
            - "--min-provider-version={{ .Values.minimumProviderVersions }}"
            {{- end }}
            {{- if and (semverCompare ">= v0.0.15-0" .Values.linux.image.tag) .Values.enableSecretRotation }}
            - "--enable-secret-rotation={{ .Values.enableSecretRotation }}"
            {{- end }}
            {{- if and (semverCompare ">= v0.0.15-0" .Values.linux.image.tag) .Values.rotationPollInterval }}
            - "--rotation-poll-interval={{ .Values.rotationPollInterval }}"
            {{- end }}
            - "--metrics-addr={{ .Values.linux.metricsAddr }}"
            {{- if and (semverCompare ">= v0.0.22-0" .Values.linux.image.tag) .Values.providerHealthCheck }}
            - "--provider-health-check={{ .Values.providerHealthCheck }}"
            {{- end }}
            {{- if and (semverCompare ">= v0.0.22-0" .Values.linux.image.tag) .Values.providerHealthCheckInterval }}
            - "--provider-health-check-interval={{ .Values.providerHealthCheckInterval }}"
            {{- end }}
            {{- if .Values.maxCallRecvMsgSize }}
            - "--max-call-recv-msg-size={{ .Values.maxCallRecvMsgSize | int64 }}"
            {{- end }}
          env:
          {{- with .Values.linux.env }}
            {{- toYaml . | nindent 10 }}
          {{- end }}
          - name: CSI_ENDPOINT
            value: unix:///csi/csi.sock
          - name: KUBE_NODE_NAME
            valueFrom:
              fieldRef:
                apiVersion: v1
                fieldPath: spec.nodeName
          imagePullPolicy: {{ .Values.linux.image.pullPolicy }}
          securityContext:
            privileged: true
          {{- if semverCompare ">= v0.0.8-0" .Values.linux.image.tag }}
          ports:
            - containerPort: {{ .Values.livenessProbe.port }}
              name: healthz
              protocol: TCP
            - containerPort: {{ trimPrefix ":" .Values.linux.metricsAddr }}
              name: metrics
              protocol: TCP
          livenessProbe:
              failureThreshold: 5
              httpGet:
                path: /healthz
                port: healthz
              initialDelaySeconds: 30
              timeoutSeconds: 10
              periodSeconds: 15
          {{- end }}
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
            - name: mountpoint-dir
              mountPath: {{ .Values.linux.kubeletRootDir }}/pods
              mountPropagation: Bidirectional
            - name: providers-dir
              mountPath: /etc/kubernetes/secrets-store-csi-providers
            {{- if .Values.linux.volumeMounts }}
              {{- toYaml .Values.linux.volumeMounts | nindent 12}}
            {{- end }}
{{- with .Values.linux.driver.resources }}
          resources:
{{ toYaml . | indent 12 }}
{{- end }}
        {{- if semverCompare ">= v0.0.8-0" .Values.linux.image.tag }}
        - name: liveness-probe
          image: "{{ .Values.linux.livenessProbeImage.repository }}:{{ .Values.linux.livenessProbeImage.tag }}"
          imagePullPolicy: {{ .Values.linux.livenessProbeImage.pullPolicy }}
          args:
          - --csi-address=/csi/csi.sock
          - --probe-timeout=3s
          - --http-endpoint=0.0.0.0:{{ .Values.livenessProbe.port }}
          - -v={{ .Values.livenessProbe.logLevel }}
          volumeMounts:
            - name: plugin-dir
              mountPath: /csi
{{- with .Values.linux.livenessProbe.resources }}
          resources:
{{ toYaml . | indent 12 }}
{{- end }}
        {{- end }}
      {{- if .Values.linux.priorityClassName }}
      priorityClassName: {{ .Values.linux.priorityClassName | quote }}
      {{- end }}
      volumes:
        - name: mountpoint-dir
          hostPath:
            path: {{ .Values.linux.kubeletRootDir }}/pods
            type: DirectoryOrCreate
        - name: registration-dir
          hostPath:
            path: {{ .Values.linux.kubeletRootDir }}/plugins_registry/
            type: Directory
        - name: plugin-dir
          hostPath:
            path: {{ .Values.linux.kubeletRootDir }}/plugins/csi-secrets-store/
            type: DirectoryOrCreate
        - name: providers-dir
          hostPath:
            path: {{ .Values.linux.providersDir }}
            type: DirectoryOrCreate
        {{- if .Values.linux.volumes }}
          {{- toYaml .Values.linux.volumes | nindent 8}}
        {{- end }}
      nodeSelector:
        kubernetes.io/os: linux
{{- if .Values.linux.nodeSelector }}
{{- toYaml .Values.linux.nodeSelector | nindent 8 }}
{{- end }}
{{- with .Values.linux.tolerations }}
      tolerations:
{{ toYaml . | indent 8 }}
{{- end }}
{{- end -}}
